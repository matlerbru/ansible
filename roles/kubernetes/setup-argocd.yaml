
- name: Include Kubernetes variables
  include_vars:
    file: ../../vars/kubernetes.yaml

- name: Include Vault variables
  include_vars:
    file: ../../vars/vault.yaml

- name: Get the status of argocd-operator
  ansible.builtin.shell: kubectl -n operators get deployments -o custom-columns=NAME:.metadata.name,READY:.status.readyReplicas | grep argocd-operator-controller-manager
  register: argocd_operator_status
  ignore_errors: true

- name: Install argocd-operator
  ansible.builtin.shell: |
    kubectl create -f https://operatorhub.io/install/argocd-operator.yaml
  when: argocd_operator_status.rc != 0

- name: Wait for argocd-operator-controller-manager pod to be Running
  ansible.builtin.shell: |
    kubectl get deploy -n operators argocd-operator-controller-manager | grep 1/1
  register: pod_status
  retries: 60
  delay: 5
  until: pod_status.rc == 0

- name: Install argo-cd cli tool
  ansible.builtin.shell: |
    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
    rm argocd-linux-amd64
  become: true

- name: Ensure argo-cd namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: argocd

- name: Add argocd cr
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: ArgoCD
      metadata:
        name: argocd
        namespace: argocd
      spec:
        server:
          ingress:
            enabled: true
          host: "{{ argocd.hostname }}"
          insecure: true

- name: Set argocd password
  ansible.builtin.shell: |
    kubectl -n argocd patch secret argocd-cluster \
    -p '{"stringData": {
      "admin.password": "{{ argocd.password }}"
    }}'
