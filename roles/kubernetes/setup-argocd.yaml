- name: Include Kubernetes variables
  include_vars:
    file: ../../vars/kubernetes.yaml

- name: Include Vault variables
  include_vars:
    file: ../../vars/vault.yaml

- name: Add argocd Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: Ensure argocd namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: argocd

- name: Install or upgrade argocd Helm chart
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    chart_version: "7.7.12"
    namespace: argocd
    values:
      crds:
        install: true
        keep: false
      global:
        domain: "{{ argocd.hostname }}"
      server:
        ingress:
          enabled: true
          ingressClassName: nginx
      redis:
        enabled: true
      dex:
        enabled: false
      configs:
        secret:
          argocdServerAdminPassword: "{{ argocd.password }}"
        repositories:
          helm-repo:
            url: ghcr.io/matlerbru/charts
            name: helm-repo
            type: helm
          kubernetes-repo:
            url: git@github.com:matlerbru/kubernetes.git
            name: kubernetes-repo
            type: git
            sshPrivateKey: "{{ lookup('file', '../../files/ssh/ansible/id-ansible') }}"
        params:
          server.insecure: true
    release_state: present

- name: Create ArgoCD Metrics Service
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: argocd-metrics
        namespace: argocd
        labels:
          app: argocd-metrics
      spec:
        selector:
          app.kubernetes.io/name: argocd-server
        ports:
          - protocol: TCP
            port: 8082
            targetPort: 8082
            name: metrics

- name: Create ArgoCD ServiceMonitor
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    definition:
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: argocd-metrics
        namespace: monitoring
        labels:
          release: prometheus
      spec:
        selector:
          matchLabels:
            app: argocd-metrics
        namespaceSelector:
          matchNames:
            - argocd
        endpoints:
          - port: metrics
            interval: 30s
            path: /metrics
