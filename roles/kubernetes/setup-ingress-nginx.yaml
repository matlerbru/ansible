- name: Add ingress-nginx Helm repository
  kubernetes.core.helm_repository:
    name: ingress-nginx
    repo_url: https://kubernetes.github.io/ingress-nginx

- name: Ensure ingress-nginx namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ingress-nginx

- name: Install or upgrade ingress-nginx Helm chart
  kubernetes.core.helm:
    name: ingress-nginx
    chart_ref: ingress-nginx/ingress-nginx
    chart_version: "4.11.3"
    namespace: ingress-nginx
    values:
      controller:
        kind: DaemonSet
        hostNetwork: true
        ingressClassResource:
          default: true
    release_state: present

- name: Check if local cert secret exists in Kubernetes
  ansible.builtin.shell: |
    kubectl get secret lan -n ingress-nginx lan --ignore-not-found | grep -q 'lan'
  register: local_cert_check
  ignore_errors: true

- name: Ensure certs directory exists
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../../files/certs"
    state: directory
  when: local_cert_check.rc != 0

- name: Generate private key if secret is not present
  community.crypto.openssl_privatekey:
    path: "{{ playbook_dir }}/../../files/certs/lan.key"
    size: 4096
  when: local_cert_check.rc != 0

- name: Generate public key if secret is not present
  community.crypto.openssl_publickey:
    path: "{{ playbook_dir }}/../../files/certs/lan.crt"
    privatekey_path: "{{ playbook_dir }}/../../files/certs/lan.key"
  when: local_cert_check.rc != 0

- name: Create Kubernetes TLS secret
  kubernetes.core.k8s:
    state: present
    namespace: ingress-nginx
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: lan
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ lookup('file', playbook_dir + '/../../files/certs/lan.crt') | b64encode }}"
        tls.key: "{{ lookup('file', playbook_dir + '/../../files/certs/lan.key') | b64encode }}"
  when: local_cert_check.rc != 0
