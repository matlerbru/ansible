- name: Set SELinux to permissive temporarily
  ansible.builtin.command: setenforce 0
  become: true

- name: Ensure SELinux is permissive in config file
  ansible.builtin.replace:
    path: /etc/selinux/config
    regexp: "^SELINUX=enforcing"
    replace: "SELINUX=permissive"
  become: true

- name: Set up ip-tables
  ansible.builtin.shell: |
    cat <<EOF | tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF

    sudo modprobe overlay
    sudo modprobe br_netfilter

    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF

    sysctl --system
  become: true

- name: Increase fs.inotify.max_user_instances permanently
  lineinfile:
    path: /etc/sysctl.conf
    regexp: "^fs.inotify.max_user_instances"
    line: "fs.inotify.max_user_instances=1024"
    create: yes
  become: true
  notify:
    - Apply sysctl changes

- name: Increase file descriptor limit permanently (soft and hard)
  blockinfile:
    path: /etc/security/limits.conf
    block: |
      * soft nofile 100000
      * hard nofile 100000
  become: true
  notify:
    - Apply limits changes

- name: Ensure pam_limits is enabled
  lineinfile:
    path: /etc/pam.d/common-session
    line: "session required pam_limits.so"
    create: yes
  become: true

  handlers:
    - name: Apply sysctl changes
      sysctl:
        name: fs.inotify.max_user_instances
        value: "1024"
        state: present
        reload: yes
      become: true

    - name: Apply limits changes
      command: ulimit -n 100000
      become: true
